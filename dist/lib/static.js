"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.REMOVE_HELP_INFO = exports.DEPLOY_HELP_INFO = exports.COMPONENT_HELP_INFO = exports.DESCRIPTION = exports.FC_NAS_SERVICE_PREFIX = exports.FC_CODE_CACHE_DIR = exports.FC_BASE_CACHE_DIR = exports.SUPPORTED_REMOVE_ARGS = exports.FUNCTION_CONF_DEFAULT = void 0;
var os = __importStar(require("os"));
var path = __importStar(require("path"));
exports.FUNCTION_CONF_DEFAULT = {
    description: 'This is default function description by fc-deploy component',
    runtime: 'nodejs10',
    handler: 'index.handler',
    memorySize: 128,
    timeout: 3,
    caPort: 9000,
    instanceConcurrency: 1,
    instanceType: 'e1',
    codeUri: './',
};
exports.SUPPORTED_REMOVE_ARGS = ['service', 'function', 'trigger', 'domain'];
exports.FC_BASE_CACHE_DIR = path.join(os.homedir(), '.s/cache/fc-base');
exports.FC_CODE_CACHE_DIR = path.join(exports.FC_BASE_CACHE_DIR, 'code');
exports.FC_NAS_SERVICE_PREFIX = '_FC_NAS_';
exports.DESCRIPTION = 'generated by fc-deploy component';
exports.COMPONENT_HELP_INFO = [
    {
        header: 'fc-deploy component',
        content: 'You can use the component to deploy/remove the serverless application.',
    },
    {
        header: 'Usage',
        content: '$ s <command> <options>',
    },
    {
        header: 'Command List',
        content: [
            { name: 'help', summary: 'Display help information.' },
            { name: 'deploy', summary: 'Deploy alicloud function computer resources.' },
            { name: 'remove', summary: 'Remove alicloud function computer resources.' },
        ],
    },
    {
        header: 'Examples with Yaml',
        content: [
            '$ s {bold deploy} {bold --help}',
            '$ s {bold deploy} {bold --assume-yes}',
            '$ s {bold remove} {underline service} ',
            '$ s {bold help}',
        ],
    },
];
exports.DEPLOY_HELP_INFO = [
    {
        header: 'Deploy',
        content: 'Deploy a serverless application.',
    },
    {
        header: 'Usage',
        content: '$ s deploy <options>',
    },
    {
        header: 'Options',
        optionList: [
            {
                name: 'use-remote',
                description: 'Deploy resource using remote config.',
                type: Boolean,
            },
            {
                name: 'use-local',
                description: 'Deploy resource using local config.',
                type: Boolean,
            },
            {
                name: 'push-registry',
                typeLabel: '{underline <registry>}',
                description: 'Specify registry or registry type of the image when use custom container runtime.\nRegistry type includes \'acr-internet\' and \'acr-vpc\'',
            },
        ],
    },
    {
        header: 'Global Options',
        optionList: [
            {
                name: 'assume-yes',
                description: 'Assume that the answer to any question which would be asked is yes.',
                alias: 'y',
                type: Boolean,
            },
            {
                name: 'help',
                description: 'Display help for command.',
                alias: 'h',
                type: Boolean,
            },
        ],
    },
    {
        header: 'Examples with Yaml',
        content: [
            '$ s {bold deploy}',
            '$ s <ProjectName> {bold deploy}',
            '$ s {bold deploy} {underline --use-remote}',
            '$ s {bold exec} -- {bold deploy} {underline --use-remote}',
            '$ s {bold exec} <ProjectName> -- {bold deploy} {underline --use-remote}',
        ],
    },
    {
        header: 'Examples with CLI',
        content: [
            'You can refer to the usage of fc-api and execute [s cli fc-api -h] for help',
        ],
    },
];
exports.REMOVE_HELP_INFO = [
    {
        header: 'Remove',
        content: 'Specify RESOURCE to remove it and resource belonging to it.\n' +
            'If {bold service} is specified, service and its functions should be removed.\n' +
            'If {bold function} is specified, function and its triggers should be removed.\n' +
            'If {bold trigger} is specified, you can specify the trigger name to remove the specific trigger or remove all triggers without trigger name.\n' +
            'If {bold domain} is specified, you can specify the domain name to remove the specific domain or remove all domains without domain name.',
    },
    {
        header: 'Usage',
        content: '$ s remove <RESOURCE> <options>',
    },
    {
        header: 'Resource',
        optionList: [
            {
                name: 'service',
                description: 'The service resource.',
                type: String,
            },
            {
                name: 'function',
                description: 'The function resource.',
                type: String,
            },
            {
                name: 'trigger',
                description: 'The trigger resource.',
                type: String,
            },
            {
                name: 'domain',
                description: 'The domain resource.',
                type: String,
            },
        ],
    },
    {
        header: 'Options',
        optionList: [
            {
                name: 'name',
                typeLabel: '{underline <name>}',
                description: 'Resource name to be removed, only for trigger/domain resource.',
                alias: '-n',
                type: String,
            },
        ],
    },
    {
        header: 'Global Options',
        optionList: [
            {
                name: 'assume-yes',
                description: 'Assume that the answer to any question which would be asked is yes.',
                alias: 'y',
                type: Boolean,
            },
            {
                name: 'help',
                description: 'Help for rm.',
                alias: 'h',
                type: Boolean,
            },
        ],
    },
    {
        header: 'Examples with Yaml',
        content: [
            '$ s {bold remove}',
            '$ s <ProjectName> {bold remove}',
            '$ s {bold remove} {underline service}',
            '$ s {bold remove} {underline domain} [{bold --name} {underline name}]',
            '$ s exec -- {bold remove} {underline domain} [{bold --name} {underline name}]',
        ],
    },
    {
        header: 'Examples with CLI',
        content: [
            'You can refer to the usage of fc-api and execute [s cli fc-api -h] for help',
        ],
    },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xpYi9zdGF0aWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHFDQUF5QjtBQUN6Qix5Q0FBNkI7QUFFaEIsUUFBQSxxQkFBcUIsR0FBRztJQUNuQyxXQUFXLEVBQUUsNkRBQTZEO0lBQzFFLE9BQU8sRUFBRSxVQUFVO0lBQ25CLE9BQU8sRUFBRSxlQUFlO0lBQ3hCLFVBQVUsRUFBRSxHQUFHO0lBQ2YsT0FBTyxFQUFFLENBQUM7SUFDVixNQUFNLEVBQUUsSUFBSTtJQUNaLG1CQUFtQixFQUFFLENBQUM7SUFDdEIsWUFBWSxFQUFFLElBQUk7SUFDbEIsT0FBTyxFQUFFLElBQUk7Q0FDZCxDQUFDO0FBRVcsUUFBQSxxQkFBcUIsR0FBRyxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3JFLFFBQUEsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztBQUNoRSxRQUFBLGlCQUFpQixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMseUJBQWlCLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDekQsUUFBQSxxQkFBcUIsR0FBRyxVQUFVLENBQUM7QUFDbkMsUUFBQSxXQUFXLEdBQUcsa0NBQWtDLENBQUM7QUFFakQsUUFBQSxtQkFBbUIsR0FBRztJQUNqQztRQUNFLE1BQU0sRUFBRSxxQkFBcUI7UUFDN0IsT0FBTyxFQUFFLHdFQUF3RTtLQUNsRjtJQUNEO1FBQ0UsTUFBTSxFQUFFLE9BQU87UUFDZixPQUFPLEVBQUUseUJBQXlCO0tBQ25DO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsY0FBYztRQUN0QixPQUFPLEVBQUU7WUFDUCxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLDJCQUEyQixFQUFFO1lB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